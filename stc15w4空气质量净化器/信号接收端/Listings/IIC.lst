C51 COMPILER V9.59.0.0   IIC                                                               05/04/2023 22:25:13 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE IIC
OBJECT MODULE PLACED IN .\Objects\IIC.obj
COMPILER INVOKED BY: D:\keil\keil_mdk\C51\BIN\C51.EXE IIC.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE DEBUG PRINT(.\Listings\I
                    -IC.lst) OBJECT(.\Objects\IIC.obj)

line level    source

   1          #include "IIC.h"
   2          
   3          #define DELAY_TIME 5
   4          
   5          sbit SDA = P2^1;  
   6          sbit SCL = P2^0;  
   7          
   8          void IIC_Delay(unsigned char i)
   9          {
  10   1          do{_nop_();}
  11   1          while(i--);        
  12   1      }
  13          
  14          //起始条件：SCL高电平期间，SDA从高电平切换到低电平
  15          void IIC_Start()
  16          {
  17   1          SDA = 1;
  18   1          SCL = 1;
  19   1          IIC_Delay(DELAY_TIME);
  20   1          SDA = 0;
  21   1          IIC_Delay(DELAY_TIME);
  22   1          SCL = 0;    
  23   1      }
  24          
  25          //终止条件：SCL高电平期间，SDA从低电平切换到高电平
  26          void IIC_Stop()
  27          {
  28   1          SDA = 0;
  29   1          SCL = 1;
  30   1          IIC_Delay(DELAY_TIME);
  31   1          SDA = 1;
  32   1          IIC_Delay(DELAY_TIME);
  33   1      }
  34          
  35          /**
  36           * @brief 发送一个字节：
  37              SCL低电平期间，主机将数据位依次放到SDA线上（高位在前）
  38              然后拉高SCL，从机将在SCL高电平期间读取数据位，
  39              所以SCL高电平期间SDA不允许有数据变化，
  40              依次循环上述过程8次，即可发送一个字节
  41           *
  42           * @param byte 传入的字
  43           */
  44          void IIC_SendByte(u8 byte)
  45          {
  46   1          unsigned char i;
  47   1      
  48   1          for(i=0; i<8; i++)
  49   1          {
  50   2              SCL  = 0;
  51   2              IIC_Delay(DELAY_TIME);
  52   2              if(byte & 0x80) SDA  = 1;
  53   2              else SDA  = 0;
  54   2              IIC_Delay(DELAY_TIME);
C51 COMPILER V9.59.0.0   IIC                                                               05/04/2023 22:25:13 PAGE 2   

  55   2              SCL = 1;
  56   2              byte <<= 1;
  57   2              IIC_Delay(DELAY_TIME);
  58   2          }
  59   1          SCL  = 0;  
  60   1      }
  61          
  62          /**
  63           * @brief 接收一个字节：
  64              SCL低电平期间，从机将数据位依次放到SDA线上（高位在前）
  65              然后拉高SCL，主机将在SCL高电平期间读取数据位
  66              所以SCL高电平期间SDA不允许有数据变化
  67              依次循环上述过程8次即可接收一个字节（主机在接收之前，需要释放SDA）
  68           *
  69           * @return byte
  70           */
  71          u8 IIC_ReceiveByte()
  72          {
  73   1          unsigned char i, da;
  74   1          for(i=0; i<8; i++)
  75   1          {   
  76   2              SCL = 1;
  77   2              IIC_Delay(DELAY_TIME);
  78   2              da <<= 1;
  79   2              if(SDA) da |= 1;
  80   2              SCL = 0;
  81   2              IIC_Delay(DELAY_TIME);
  82   2          }
  83   1          return da;  
  84   1      }
  85          
  86          /**
  87           * @brief 发送应答：
  88              在接收完一个字节之后，主机在下一个时钟发送一位数据，
  89              数据0表示应答，数据1表示非应答
  90           *
  91           * @param ack_bit 0为发送应答，1不发送应答
  92           */
  93          void IIC_SendAck(u8 ack_bit)
  94          {
  95   1          SCL = 0;
  96   1          SDA = ack_bit;                                      // 0为发送应答，1不发送应答
  97   1          IIC_Delay(DELAY_TIME);
  98   1          SCL = 1;
  99   1          IIC_Delay(DELAY_TIME);
 100   1          SCL = 0; 
 101   1          SDA = 1;
 102   1          IIC_Delay(DELAY_TIME);
 103   1      }
 104          
 105          /**
 106           * @brief 接收应答：
 107              在发送完一个字节之后，主机在下一个时钟接收一位数据
 108              判断从机是否应答
 109              数据0表示应答，数据1表示非应答（主机在接收之前，需要释放SDA）
 110              
 111           * @return 1无应答,0有应答
 112           */
 113          u8 IIC_ReceiveAck()
 114          {
 115   1          bit ackbit;
 116   1              
C51 COMPILER V9.59.0.0   IIC                                                               05/04/2023 22:25:13 PAGE 3   

 117   1          SCL  = 1;
 118   1          IIC_Delay(DELAY_TIME);
 119   1          ackbit = SDA;
 120   1          SCL = 0;
 121   1          IIC_Delay(DELAY_TIME);
 122   1          return ackbit;
 123   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    174    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
